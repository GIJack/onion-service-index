<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8" />
	<link rel="stylesheet" href="/static/style.css" />
	<link rel="shortcut icon" href="/static/favicon.png" />
	<title>{{ app_name }}</title>
</head>
<body>
{% set v3 = 'v3' in request.args %}
{% set num_onions = num_onions[v3] %}
<h1><a href='{{ get_page_url(v3=v3) }}'>The</a> longest and least useful onion index in the galaxy</h1>
<p id='about'>
This website lists <em>literally</em> every onion service.
If you're looking for a complete index,
it doesn't get any more complete than this.
<ul>
<li>We list <a href="/">v2 onions.</a>
<li>We list <a href="/?v3">v3 onions.</a>
<li>We list all {{ num_onions }} onions.
<li>We list onions that used to be online.
<li>We list onions that are not online yet.
<li>We list onions that are impossible to access without
<a href="http://mattttttssi4lhud.onion/p/GmiiUPQL.html">the proper authorization</a>.
<li>And here and there, you'll find onion services that are actually online
right now.
</ul>
<p id='nav'>
	<strong>Navigation</strong><br/>
	{% set random = '/random' + ('?v3' if v3 else '') %}
	<a href='{{ random }}'>Random</a>
	<a href='{{ get_page_url(v3=v3) }}'>First</a>
	<a href='{{ get_page_url(num_onions // page_length, v3) }}'>Last</a>
	<br/>
	{% for n in nav %}
		{% set page = n|string|truncate(9) %}
		{% if n is equalto page %}
			{{ page }}
		{% else %}
			<a href="{{ get_page_url(n, v3) }}" title='{{ n }}'>{{ page }}</a>
		{% endif %}
	{% endfor %}
</p>
<p id='link_list'>
	{% for o in onions %}
		<a href='http://{{ o }}.onion'>{{ o }}.onion</a><br/>
	{% endfor %}
</p>

<div id='about'>

<h2>Why?</h2>
<p>So, I removed the previous angst filled rant. Previous author was about half
right. Manually added lists are somewhat dumb. Do you know what was not? Writing
an enumeration script against onion space, and backing it up with a random feature.</p>

<p>Its like nmap, for .onion sites. So, in this case, fuzzing .onion namespace,
can then be fed through a spider and accessed with a search engine.</p>

<p>I originally fed their original .onion hosted version through yacy, and once
that went offline, I was able to find and fork the code on github.</p>

<p>Best use case: run local, and feed this into <a href=https://www.yacy.net/>yacy</a>,
your own personal seach engine written in java using solr and elastisearch
</p>

<h2>Source Code/License</h2>
<p>
The source code is available on <a href="https://github.com/GIJack/onion-service-index">
</p>
<p>
Onion Service Index&mdash;a list of literally every onion service ever<br>
Copyright &copy; Original - 2017 Matt Traudt, Benjamin Mintz. Forked 2020 GI_Jack
</p>
<p>
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as
published by the Free Software Foundation, version 3 of the License only.
</p>
<p>
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU Affero General Public License for more details.
</p>
<p>
You should have received a copy of the GNU Affero General Public License
along with this program. If not, see
<a href="https://www.gnu.org/licenses/">https://www.gnu.org/licenses/</a>.
</p>

</div> <!-- about -->

<div id='faq'>
<h2>FAQ</h2>

<h3>How long did this take to make?</h3>
<p>Just one afternoon, or two if you count Ben Mintz's contribution.</p>
<p>and about 30 min of GI_Jack's time</p>
<h3>Does this take a lot of disk space?</h3>
<p>No. I generate pages as necessary. I cache them too. And no, it should be
impossible for you to make my server run out of disk space.</p>


<h3>Where can I actually find links?</h3>
<p>I think <a href='https://ahmia.fi'>Ahmia</a> is the most likely search engine
to stick around. I like the way
<a href='http://zlal32teyptf4tvi.onion'>Fresh Onions</a> looks.</p>

<h3>I can't find any interesting links</h3>
<p>Maybe because there isn't anything interesting to find. And that's also not a
question.</p>

<h3>Can't I make foo.xyz.onion and bar.xyz.onion? They don't show up on
this list.</h3>
<p>Sure. If you own xyz.onion and figure out how to host different websites at
subdomains of xyz.onion, that's pretty cool I suppose. But here's why I don't
think that makes this any less of a complete list.</p>
<p>An "onion service" isn't necessarily a website. If we decide to define it as
"a name that connects you to a specific Tor client," then foo.xyz.onion and
bar.xyz.onion are the same onion service. They are both going to the Tor client
serving xyz.onion.</p>
<p>Tor doesn't handle subdomains like that. If you go through the process of
hosting two websites at the same onion domain, you'll realize you have to do it
at the level of the webserver. Tor ignores subdomains.</p>

</div> <!-- FAQ -->
</body>
</html>
